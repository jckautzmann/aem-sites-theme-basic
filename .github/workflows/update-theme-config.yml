name: Update theme config on AEM with artifact id

on:
  repository_dispatch:
    types: update_theme_config

jobs:
  update_config:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install NPM dependencies
        run: npm install

      - name: Compute env vars
        id: env_vars
        run: |
          echo ::set-output name=ARTIFACT_ID::$(curl ${{ github.api_url }}/repos/${{ github.repository }}/actions/runs/${{ github.event.client_payload.deployed_theme_run_id }}/artifacts -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' | jq -r '.artifacts[0].id')
          echo ::set-output name=GIT_ORG::$(echo "${{ github.repository }}" | awk -F / '{print $1}')
          echo ::set-output name=GIT_REPO::$(echo "${{ github.repository }}" | awk -F / '{print $2}')
          echo ::set-output name=GIT_TOKEN::$(echo "${{ secrets.GIT_TOKEN }}")
          echo ::set-output name=SALT::$(LC_ALL=C tr -dc 'A-Za-z0-9' </dev/urandom | head -c 16 ; echo)

      - name: Compute hash
        id: hash
        run: |
          echo ::set-output name=HASH::$(echo -n "${{ steps.env_vars.outputs.GIT_ORG }}${{ steps.env_vars.outputs.GIT_REPO }}${{ steps.env_vars.outputs.GIT_TOKEN }}${{ steps.env_vars.outputs.SALT }}" | shasum -a 256 | cut -d " " -f 1)

      - name: Updated theme path
        env:
          SITE: ${{ secrets.SITE }}
          GIT_ARTIFACT_ID: ${{ steps.env_vars.outputs.ARTIFACT_ID }}
          GIT_ORG: ${{ steps.env_vars.outputs.GIT_ORG }}
          GIT_REPO: ${{ steps.env_vars.outputs.GIT_REPO }}
          GIT_TOKEN: ${{ steps.env_vars.outputs.GIT_TOKEN }}
          SALT: ${{ steps.env_vars.outputs.SALT }}
          HASH: ${{ steps.hash.outputs.HASH }}
          URL: ${{ secrets.URL }}
        run: dotenv -- cross-var curl -d 'site=%SITE%' -d 'artifact=%GIT_ARTIFACT_ID%' -d 'salt=%SALT%' -d 'hash=%HASH%' %URL%/aem/update.theme.html
